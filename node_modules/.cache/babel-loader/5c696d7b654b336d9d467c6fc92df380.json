{"ast":null,"code":"var _jsxFileName = \"/Users/s212218/calendar_app/src/App.js\";\n\n/**\n * 各種モジュールのインストール\n*/\nimport React, { useState } from 'react'; // FullCalendarコンポーネント。\n\nimport FullCalendar from '@fullcalendar/react'; // FullCalendarで週表示を可能にするモジュール。\n\nimport timeGridPlugin from '@fullcalendar/timegrid'; // FullCalendarで月表示を可能にするモジュール。\n\nimport dayGridPlugin from '@fullcalendar/daygrid'; // FullCalendarで日付や時間が選択できるようになるモジュール。\n\nimport interactionPlugin from '@fullcalendar/interaction';\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport ja from 'date-fns/locale/ja';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport getMonth from 'date-fns/getMonth';\nimport getYear from 'date-fns/getYear';\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CalendarData = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      locale: \"ja\" // ロケール設定。\n      ,\n      plugins: [timeGridPlugin, dayGridPlugin, interactionPlugin] // 週表示、月表示、日付等のクリックを可能にするプラグインを設定。\n      ,\n      initialView: \"dayGridMonth\" // カレンダーの初期表示設定。この場合、週表示。\n      ,\n      slotDuration: \"00:30:00\" // 週表示した時の時間軸の単位。\n      ,\n      selectable: true // 日付選択を可能にする。interactionPluginが有効になっている場合のみ。\n      ,\n      businessHours: {\n        // ビジネス時間の設定。\n        daysOfWeek: [1, 2, 3, 4, 5],\n        // 0:日曜 〜 7:土曜\n        startTime: '00:00',\n        endTIme: '24:00'\n      },\n      weekends: true // 週末を強調表示する。\n      ,\n      titleFormat: {\n        // タイトルのフォーマット\n        year: 'numeric',\n        month: 'short'\n      },\n      headerToolbar: {\n        // カレンダーのヘッダー設定\n        start: 'title',\n        center: 'prev, next, today',\n        end: 'dayGridMonth,timeGridWeek'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CalendarData;\n\nclass InputDate extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      startDate: null\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.eraHandler = yearNow => {\n      const generate = (era, startYear) => {\n        let yearDsp = yearNow - startYear + 1;\n\n        if (yearDsp === 1) {\n          yearDsp = \"元\";\n        } else {\n          yearDsp = ('00' + yearDsp).slice(-2);\n        }\n\n        return `${era}${yearDsp}年`;\n      };\n\n      if (yearNow >= 2019) {\n        return generate('令和', 2019);\n      }\n\n      if (yearNow >= 1989) {\n        return generate('平成', 1989);\n      }\n\n      if (yearNow >= 1926) {\n        return generate('昭和', 1926);\n      }\n\n      if (yearNow >= 1912) {\n        return generate('大正', 1912);\n      }\n    };\n  }\n\n  render() {\n    var startYear = 1912; // カレンダーに表示する最初の西暦（大正元年となる1912を指定）\n\n    var futureListUp = 5; // カレンダーに表示する未来の年数\n\n    var years = Array.from({\n      length: getYear(new Date()) - startYear + futureListUp\n    }, (v, k) => k + startYear).reverse();\n    const months = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        locale: \"ja\",\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        placeholderText: \"\\u65E5\\u4ED8\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        dateFormat: \"yyyy/MM/dd\",\n        isClearable: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        todayButton: \"\\u4ECA\\u65E5\",\n        dropdownMode: \"select\" // カレンダーのヘッダ部分をカスタマイズする\n        ,\n        renderCustomHeader: _ref => {\n          let {\n            date,\n            changeYear,\n            changeMonth,\n            decreaseMonth,\n            increaseMonth,\n            prevMonthButtonDisabled,\n            nextMonthButtonDisabled\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: 10,\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: decreaseMonth,\n              disabled: prevMonthButtonDisabled,\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: getYear(date),\n              onChange: _ref2 => {\n                let {\n                  target: {\n                    value\n                  }\n                } = _ref2;\n                return changeYear(value);\n              },\n              children: years.map(option =>\n              /*#__PURE__*/\n              // eraHandler()で年のプルダウンに元号を付ける\n              _jsxDEV(\"option\", {\n                value: option,\n                children: [option, \"\\u5E74\\uFF08\", this.eraHandler(option), \"\\uFF09\"]\n              }, option, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: months[getMonth(date)],\n              onChange: _ref3 => {\n                let {\n                  target: {\n                    value\n                  }\n                } = _ref3;\n                return changeMonth(months.indexOf(value));\n              },\n              children: months.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: [\" \", option, \"\\u6708 \"]\n              }, option, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: increaseMonth,\n              disabled: nextMonthButtonDisabled,\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CalendarData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarData\");","map":{"version":3,"sources":["/Users/s212218/calendar_app/src/App.js"],"names":["React","useState","FullCalendar","timeGridPlugin","dayGridPlugin","interactionPlugin","DatePicker","registerLocale","ja","createStyles","makeStyles","getMonth","getYear","CalendarData","props","daysOfWeek","startTime","endTIme","year","month","start","center","end","InputDate","Component","state","startDate","handleChange","date","setState","eraHandler","yearNow","generate","era","startYear","yearDsp","slice","render","futureListUp","years","Array","from","length","Date","v","k","reverse","months","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","margin","display","justifyContent","target","value","map","option","indexOf"],"mappings":"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","sourcesContent":["/**\n * 各種モジュールのインストール\n*/\nimport React, { useState } from 'react'\n\n// FullCalendarコンポーネント。\nimport FullCalendar from '@fullcalendar/react'\n\n// FullCalendarで週表示を可能にするモジュール。\nimport timeGridPlugin from '@fullcalendar/timegrid'\n\n// FullCalendarで月表示を可能にするモジュール。\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\n// FullCalendarで日付や時間が選択できるようになるモジュール。\nimport interactionPlugin from '@fullcalendar/interaction'\n\nimport DatePicker, { registerLocale } from \"react-datepicker\";\n\nimport ja from 'date-fns/locale/ja'\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport getMonth from 'date-fns/getMonth';\nimport getYear from 'date-fns/getYear';\n\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\n\nconst CalendarData = (props) => {\n\n  return (\n    <div>\n      <FullCalendar\n        locale=\"ja\"　// ロケール設定。\n        plugins={[timeGridPlugin, dayGridPlugin, interactionPlugin]} // 週表示、月表示、日付等のクリックを可能にするプラグインを設定。\n        initialView=\"dayGridMonth\" // カレンダーの初期表示設定。この場合、週表示。\n        slotDuration=\"00:30:00\"　// 週表示した時の時間軸の単位。\n        selectable={true} // 日付選択を可能にする。interactionPluginが有効になっている場合のみ。\n        businessHours={{ // ビジネス時間の設定。\n          daysOfWeek: [1, 2, 3, 4, 5], // 0:日曜 〜 7:土曜\n          startTime: '00:00',\n          endTIme: '24:00'\n        }}\n        weekends={true} // 週末を強調表示する。\n        titleFormat={{ // タイトルのフォーマット\n          year: 'numeric',\n          month: 'short'\n        }}\n        headerToolbar={{ // カレンダーのヘッダー設定\n          start: 'title',\n          center: 'prev, next, today',\n          end: 'dayGridMonth,timeGridWeek'\n        }}\n\n      />\n\n    </div>\n  )\n}\nclass InputDate extends React.Component {\n  state = {\n    startDate: null\n  };\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  eraHandler = yearNow => {\n\n    const generate = (era, startYear) => {\n      let yearDsp = yearNow - startYear + 1;\n      if (yearDsp === 1) {\n        yearDsp = \"元\";\n      } else {\n        yearDsp = ('00' + yearDsp).slice(-2);\n      }\n      return `${era}${yearDsp}年`;\n    };\n\n    if (yearNow >= 2019) {\n      return generate('令和', 2019);\n    }\n\n    if (yearNow >= 1989) {\n      return generate('平成', 1989);\n    }\n\n    if (yearNow >= 1926) {\n      return generate('昭和', 1926);\n    }\n\n    if (yearNow >= 1912) {\n      return generate('大正', 1912);\n    }\n  }\n\n  render() {\n    var startYear = 1912; // カレンダーに表示する最初の西暦（大正元年となる1912を指定）\n    var futureListUp = 5; // カレンダーに表示する未来の年数\n    var years = Array.from({ length: getYear(new Date()) - startYear + futureListUp }, (v, k) => k + startYear).reverse();\n    const months = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n\n    return (\n      <React.Fragment>\n        <DatePicker\n          locale='ja'\n          selected={this.state.startDate}\n          onChange={this.handleChange}\n          placeholderText=\"日付を選択してください\"\n          dateFormat=\"yyyy/MM/dd\"\n          isClearable\n          showMonthDropdown\n          showYearDropdown\n          todayButton=\"今日\"\n          dropdownMode=\"select\"\n          // カレンダーのヘッダ部分をカスタマイズする\n          renderCustomHeader={({\n            date,\n            changeYear,\n            changeMonth,\n            decreaseMonth,\n            increaseMonth,\n            prevMonthButtonDisabled,\n            nextMonthButtonDisabled\n          }) => {\n            return (\n              <div\n                style={{ margin: 10, display: \"flex\", justifyContent: \"center\" }}>\n\n                {/* 前月ボタン */}\n                <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>{\"<\"}</button>\n\n                {/* 年の部分 */}\n                <select value={getYear(date)} onChange={({ target: { value } }) => changeYear(value)} >\n                  {years.map((option) => (\n                    // eraHandler()で年のプルダウンに元号を付ける\n                    <option key={option} value={option}>{option}年（{this.eraHandler(option)}）</option>\n                  ))}\n                </select>\n\n                {/* 月の部分 */}\n                <select value={months[getMonth(date)]} onChange={({ target: { value } }) => changeMonth(months.indexOf(value))} >\n                  {months.map(option => (\n                    <option key={option} value={option}> {option}月 </option>\n                  ))}\n                </select>\n\n                {/* 次月ボタン */}\n                <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>{\">\"}</button>\n              </div>\n            );\n          }\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CalendarData"]},"metadata":{},"sourceType":"module"}